[{"path":"https://darwin-eu-dev.github.io/CDMUtilities/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marti Catala. Author, maintainer.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Catala M (2023). CDMUtilities: Methods, Utilities Classes OMOP Common Data Model. R package version 0.0.0.9000, https://darwin-eu-dev.github.io/CDMUtilities/.","code":"@Manual{,   title = {CDMUtilities: Methods, Utilities and Classes for the OMOP Common Data Model},   author = {Marti Catala},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://darwin-eu-dev.github.io/CDMUtilities/}, }"},{"path":[]},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/CDMUtilities-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CDMUtilities: Methods, Utilities and Classes for the OMOP Common Data Model — CDMUtilities-package","title":"CDMUtilities: Methods, Utilities and Classes for the OMOP Common Data Model — CDMUtilities-package","text":"package provides methods utilities functionalities OMOP Common Data Model based packages. package also mantains core classes.","code":""},{"path":[]},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/CDMUtilities-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CDMUtilities: Methods, Utilities and Classes for the OMOP Common Data Model — CDMUtilities-package","text":"Maintainer: Marti Catala marti.catalasabate@ndorms.ox.ac.uk (ORCID)","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/assertCharacter.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert if an object is a character and fulfill certain conditions. — assertCharacter","title":"Assert if an object is a character and fulfill certain conditions. — assertCharacter","text":"Assert object character fulfill certain conditions.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/assertCharacter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert if an object is a character and fulfill certain conditions. — assertCharacter","text":"","code":"assertCharacter(   x,   length = NULL,   na = FALSE,   null = FALSE,   named = FALSE,   minNumCharacter = 0,   errorMessage = NULL )"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/assertCharacter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert if an object is a character and fulfill certain conditions. — assertCharacter","text":"x check. length Length . na Whether can contain NA values. null Whether can null. named Whether named. minNumCharacter Minimum number characters. errorMessage Error message display.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/assertChoice.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert if an object is a choice and fulfill certain conditions. — assertChoice","title":"Assert if an object is a choice and fulfill certain conditions. — assertChoice","text":"Assert object choice fulfill certain conditions.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/assertChoice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert if an object is a choice and fulfill certain conditions. — assertChoice","text":"","code":"assertChoice(   x,   choices,   length = NULL,   na = FALSE,   null = FALSE,   named = FALSE,   errorMessage = NULL )"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/assertChoice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert if an object is a choice and fulfill certain conditions. — assertChoice","text":"x check. choices Options x can . length Length . na Whether can contain NA values. null Whether can null. named Whether named. errorMessage Error message display.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/assertList.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert if an object is a list and fulfill certain conditions. — assertList","title":"Assert if an object is a list and fulfill certain conditions. — assertList","text":"Assert object list fulfill certain conditions.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/assertList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert if an object is a list and fulfill certain conditions. — assertList","text":"","code":"assertList(   x,   length = NULL,   na = FALSE,   null = FALSE,   named = FALSE,   class = NULL,   errorMessage = NULL )"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/assertList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert if an object is a list and fulfill certain conditions. — assertList","text":"x check. length Length . na Whether can contain NA values. null Whether can null. named Whether named. class Class elements must . errorMessage Error message display.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/assertLogical.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert if an object is a logical and fulfill certain conditions. — assertLogical","title":"Assert if an object is a logical and fulfill certain conditions. — assertLogical","text":"Assert object logical fulfill certain conditions.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/assertLogical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert if an object is a logical and fulfill certain conditions. — assertLogical","text":"","code":"assertLogical(   x,   length = NULL,   na = FALSE,   null = FALSE,   named = FALSE,   errorMessage = NULL )"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/assertLogical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert if an object is a logical and fulfill certain conditions. — assertLogical","text":"x check. length Length . na Whether can contain NA values. null Whether can null. named Whether named. errorMessage Error message display.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/assertNumeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert if an object is a numeric and fulfill certain conditions. — assertNumeric","title":"Assert if an object is a numeric and fulfill certain conditions. — assertNumeric","text":"Assert object numeric fulfill certain conditions.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/assertNumeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert if an object is a numeric and fulfill certain conditions. — assertNumeric","text":"","code":"assertNumeric(   x,   integerish = FALSE,   min = -Inf,   max = Inf,   length = NULL,   na = FALSE,   null = FALSE,   named = FALSE,   errorMessage = NULL )"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/assertNumeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert if an object is a numeric and fulfill certain conditions. — assertNumeric","text":"x check. integerish Whether elements must integerish. min Lower bound. max Upper bound. length Length . na Whether can contain NA values. null Whether can null. named Whether named. errorMessage Error message display.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/assertTibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert if an object is a tibble and fulfill certain conditions. — assertTibble","title":"Assert if an object is a tibble and fulfill certain conditions. — assertTibble","text":"Assert object tibble fulfill certain conditions.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/assertTibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert if an object is a tibble and fulfill certain conditions. — assertTibble","text":"","code":"assertTibble(   x,   numberColumns = NULL,   numberRows = NULL,   columns = NULL,   null = FALSE,   errorMessage = NULL )"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/assertTibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert if an object is a tibble and fulfill certain conditions. — assertTibble","text":"x check. numberColumns Number columns. numberRows Number rows. columns Name columns must present. null Whether can null. errorMessage Error message display.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/bind.cdm_cohort.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind multiple cdm_cohort objects. — bind.cdm_cohort","title":"Bind multiple cdm_cohort objects. — bind.cdm_cohort","text":"Bind multiple cdm_cohort objects.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/bind.cdm_cohort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind multiple cdm_cohort objects. — bind.cdm_cohort","text":"","code":"# S3 method for cdm_cohort bind(...)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/bind.cdm_cohort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind multiple cdm_cohort objects. — bind.cdm_cohort","text":"... Multiple cdm_cohort objects.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/bind.cdm_cohort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind multiple cdm_cohort objects. — bind.cdm_cohort","text":"New cdm_cohort","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/bind.cdm_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind multiple cdm_reference objects. — bind.cdm_reference","title":"Bind multiple cdm_reference objects. — bind.cdm_reference","text":"Bind multiple cdm_reference objects.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/bind.cdm_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind multiple cdm_reference objects. — bind.cdm_reference","text":"","code":"# S3 method for cdm_reference bind(..., newCdmName = \"BINDED CDM\")"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/bind.cdm_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind multiple cdm_reference objects. — bind.cdm_reference","text":"... Multiple cdm_reference objects. newCdmName Name new cdm object.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/bind.cdm_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind multiple cdm_reference objects. — bind.cdm_reference","text":"New cdm_reference.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/bind.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind two or more objects of the same class. — bind","title":"Bind two or more objects of the same class. — bind","text":"Bind two objects class.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/bind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind two or more objects of the same class. — bind","text":"","code":"bind(...)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/bind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind two or more objects of the same class. — bind","text":"... Objects bind.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/bind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind two or more objects of the same class. — bind","text":"New object.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cash-.cdm_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a cdm reference object — $.cdm_reference","title":"Subset a cdm reference object — $.cdm_reference","text":"Subset cdm reference object","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cash-.cdm_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a cdm reference object — $.cdm_reference","text":"","code":"# S3 method for cdm_reference $(x, name)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cash-.cdm_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a cdm reference object — $.cdm_reference","text":"x cdm reference name name table extract cdm object","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cash-.cdm_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset a cdm reference object — $.cdm_reference","text":"single cdm table reference","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cdmName.html","id":null,"dir":"Reference","previous_headings":"","what":"Name of a cdm_reference. — cdmName","title":"Name of a cdm_reference. — cdmName","text":"Name cdm_reference.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cdmName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Name of a cdm_reference. — cdmName","text":"","code":"cdmName(cdm)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cdmName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Name of a cdm_reference. — cdmName","text":"cdm cdm_reference object.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cdmName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Name of a cdm_reference. — cdmName","text":"Name cdm_reference.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/checkInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the input parameters in OMOP CDM Tools environment — checkInput","title":"Check the input parameters in OMOP CDM Tools environment — checkInput","text":"Check input parameters OMOP CDM Tools environment","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/checkInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the input parameters in OMOP CDM Tools environment — checkInput","text":"","code":"checkInput(..., .options = list())"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/checkInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the input parameters in OMOP CDM Tools environment — checkInput","text":"... Named elements check. name determine check applied. .options paramters needed conduct checks. must named list.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/checkInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the input parameters in OMOP CDM Tools environment — checkInput","text":"Informative error warnings messages inputs pass designed checks.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/checkInput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the input parameters in OMOP CDM Tools environment — checkInput","text":"","code":"# \\donttest{ library(CDMUtilities) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  # cdm <- mockCdm() # checkInput(cdm = cdm) # }"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cohortAttrition.html","id":null,"dir":"Reference","previous_headings":"","what":"Get cohort attrition from a cdm_cohort object. — cohortAttrition","title":"Get cohort attrition from a cdm_cohort object. — cohortAttrition","text":"Get cohort attrition cdm_cohort object.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cohortAttrition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get cohort attrition from a cdm_cohort object. — cohortAttrition","text":"","code":"cohortAttrition(cohort)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cohortAttrition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get cohort attrition from a cdm_cohort object. — cohortAttrition","text":"cohort cdm_cohort object.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cohortAttrition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get cohort attrition from a cdm_cohort object. — cohortAttrition","text":"table attrition.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cohortCount.html","id":null,"dir":"Reference","previous_headings":"","what":"Get cohort counts from a cdm_cohort object. — cohortCount","title":"Get cohort counts from a cdm_cohort object. — cohortCount","text":"Get cohort counts cdm_cohort object.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cohortCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get cohort counts from a cdm_cohort object. — cohortCount","text":"","code":"cohortCount(cohort)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cohortCount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get cohort counts from a cdm_cohort object. — cohortCount","text":"cohort cdm_cohort object.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cohortCount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get cohort counts from a cdm_cohort object. — cohortCount","text":"table counts.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cohortSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Get cohort settings from a cdm_cohort object. — cohortSet","title":"Get cohort settings from a cdm_cohort object. — cohortSet","text":"Get cohort settings cdm_cohort object.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cohortSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get cohort settings from a cdm_cohort object. — cohortSet","text":"","code":"cohortSet(cohort)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cohortSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get cohort settings from a cdm_cohort object. — cohortSet","text":"cohort cdm_cohort object.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/cohortSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get cohort settings from a cdm_cohort object. — cohortSet","text":"table details cohort set.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/collect.cdm_cohort.html","id":null,"dir":"Reference","previous_headings":"","what":"To collect a cdm_cohort object. — collect.cdm_cohort","title":"To collect a cdm_cohort object. — collect.cdm_cohort","text":"collect cdm_cohort object.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/collect.cdm_cohort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To collect a cdm_cohort object. — collect.cdm_cohort","text":"","code":"collect.cdm_cohort(x, ...)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/collect.cdm_cohort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To collect a cdm_cohort object. — collect.cdm_cohort","text":"x cohort_cdm object. ... used (compatibility).","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/export.cdm_cohort.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a cdm_cohort — export.cdm_cohort","title":"Export a cdm_cohort — export.cdm_cohort","text":"Export cdm_cohort","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/export.cdm_cohort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a cdm_cohort — export.cdm_cohort","text":"","code":"# S3 method for cdm_cohort export(x)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/export.cdm_cohort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a cdm_cohort — export.cdm_cohort","text":"x cdm_cohort object.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/export.cdm_cohort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a cdm_cohort — export.cdm_cohort","text":"Exported cdm_cohort.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/export.cdm_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a cdm_reference — export.cdm_reference","title":"Export a cdm_reference — export.cdm_reference","text":"Export cdm_reference","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/export.cdm_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a cdm_reference — export.cdm_reference","text":"","code":"# S3 method for cdm_reference export(x)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/export.cdm_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a cdm_reference — export.cdm_reference","text":"x cdm_reference object.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/export.cdm_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a cdm_reference — export.cdm_reference","text":"Exported cdm_reference.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/export.html","id":null,"dir":"Reference","previous_headings":"","what":"Export an object. — export","title":"Export an object. — export","text":"Export object.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export an object. — export","text":"","code":"export(x)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export an object. — export","text":"x Object export.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export an object. — export","text":"Exported object tbl format.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/export.tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a tibble — export.tbl","title":"Export a tibble — export.tbl","text":"Export tibble","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/export.tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a tibble — export.tbl","text":"","code":"# S3 method for tbl export(x)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/export.tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a tibble — export.tbl","text":"x tibble object.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/export.tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a tibble — export.tbl","text":"Exported tibble.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/exportResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Export list of results — exportResults","title":"Export list of results — exportResults","text":"Export list results","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/exportResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export list of results — exportResults","text":"","code":"exportResults(..., path = here::here(), resultsStem = \"results\", zip = FALSE)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/exportResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export list of results — exportResults","text":"... Named list results. path Path save results. resultsStem Stem save results csv files. Name zip file exported. zip Whether create zip file results.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/listInputCheck.html","id":null,"dir":"Reference","previous_headings":"","what":"List available inputs to check — listInputCheck","title":"List available inputs to check — listInputCheck","text":"List available inputs check","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/listInputCheck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List available inputs to check — listInputCheck","text":"","code":"listInputCheck()"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/listInputCheck.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List available inputs to check — listInputCheck","text":"","code":"# \\donttest{ library(CDMUtilities) listInputCheck() #>  [1] \"cdmName\"              \"cdmSource\"            \"cdmTables\"            #>  [4] \"cdmVersion\"           \"cdmVocabulary\"        \"cohortAsTemp\"         #>  [7] \"cohortAttritionTable\" \"cohortCountTable\"     \"cohortSetTable\"       #> [10] \"cohortTable\"          \"concept\"              \"conceptAncestor\"      #> [13] \"conceptClass\"         \"conceptRelationship\"  \"conceptSynonym\"       #> [16] \"conditionOccurrence\"  \"death\"                \"deviceExposure\"       #> [19] \"domain\"               \"drugExposure\"         \"drugStrength\"         #> [22] \"elements\"             \"individuals\"          \"input\"                #> [25] \"intermediateAsTemp\"   \"measurement\"          \"observation\"          #> [28] \"observationPeriod\"    \"path\"                 \"person\"               #> [31] \"procedureOccurrence\"  \"resultsStem\"          \"seed\"                 #> [34] \"sourceToConceptMap\"   \"string\"               \"vocabulary\"           #> [37] \"zip\"                  # }"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/mockCdm.html","id":null,"dir":"Reference","previous_headings":"","what":"It creates a mock cdm_reference. — mockCdm","title":"It creates a mock cdm_reference. — mockCdm","text":"creates mock cdm_reference.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/mockCdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"It creates a mock cdm_reference. — mockCdm","text":"","code":"mockCdm(   cdmVocabulary = mockVocabularyCdm(),   cdmName = \"MOCK CDM\",   individuals = 10,   person = NULL,   observation_period = NULL,   death = NULL,   condition_occurrence = NULL,   drug_exposure = NULL,   procedure_occurrence = NULL,   device_exposure = NULL,   measurement = NULL,   observation = NULL,   numberRecords = c(default = 2),   seed = 1,   ... )"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/mockCdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"It creates a mock cdm_reference. — mockCdm","text":"cdmVocabulary cdm_reference contains vocabulary tables. cdmName Name cdm. individuals Number individuals mock database table demographics data. person Person table. observation_period Observation period table. death death table. condition_occurrence Condition occurrence table. drug_exposure DrugExposure table. procedure_occurrence Procedure occurrence table. device_exposure Device exposure table. measurement Measurement table. observation Observation table. numberRecords number records per person. seed Random seed. ... Tables added cdm. cohorts attributes updated.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/mockCdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"It creates a mock cdm_reference. — mockCdm","text":"cdm reference mock tables","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/mockVocabularyCdm.html","id":null,"dir":"Reference","previous_headings":"","what":"It creates a mock database with the vocabulary. — mockVocabularyCdm","title":"It creates a mock database with the vocabulary. — mockVocabularyCdm","text":"creates mock database vocabulary.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/mockVocabularyCdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"It creates a mock database with the vocabulary. — mockVocabularyCdm","text":"","code":"mockVocabularyCdm(   cdmSource = NULL,   concept = NULL,   vocabulary = NULL,   domain = NULL,   conceptClass = NULL,   conceptRelationship = NULL,   conceptSynonym = NULL,   conceptAncestor = NULL,   sourceToConceptMap = NULL,   drugStrength = NULL,   cdmVersion = \"5.3\",   cdmName = \"MOCK VOCABULARY\" )"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/mockVocabularyCdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"It creates a mock database with the vocabulary. — mockVocabularyCdm","text":"cdmSource cdm source table. concept Concept table. vocabulary Vocabulary table domain Domain table. conceptClass Concept_class table. conceptRelationship Concept_relationship table. conceptSynonym Concept_synonym table. conceptAncestor Concept_ancestor table. sourceToConceptMap Source_to_concept_map table. drugStrength Drug_strength table. cdmVersion cdm version. cdmName Name cdm.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/mockVocabularyCdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"It creates a mock database with the vocabulary. — mockVocabularyCdm","text":"cdm reference vocabulary mock tables","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/mockVocabularyCdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"It creates a mock database with the vocabulary. — mockVocabularyCdm","text":"","code":"# \\donttest{ library(CDMUtilities) cdm <- mockVocabularyCdm() cdm #> # OMOP CDM reference (spec_tbl_df) #>  #> Tables: cdm_source, concept, vocabulary, domain, concept_class, concept_relationship, concept_synonym, concept_ancestor, source_to_concept_map, drug_strength # }"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/newCdmCohort.html","id":null,"dir":"Reference","previous_headings":"","what":"cdm_cohort objects constructor. — newCdmCohort","title":"cdm_cohort objects constructor. — newCdmCohort","text":"cdm_cohort objects constructor.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/newCdmCohort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cdm_cohort objects constructor. — newCdmCohort","text":"","code":"newCdmCohort(   cohortTable,   cohortSetTable = NULL,   cohortAttritionTable = NULL,   cohortCountTable = NULL,   cohortName = \"cohort\" )"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/newCdmCohort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cdm_cohort objects constructor. — newCdmCohort","text":"cohortTable Table least: cohort_definition_id, subject_id, cohort_start_date, cohort_end_date. cohortSetTable Table least: cohort_definition_id, cohort_name cohortAttritionTable Table least: cohort_definition_id, number_subjects, number_records, reason_id, reason, excluded_subjects, excluded_records. cohortCountTable Table least: cohort_definition_id, number_subjects, number_records. cohortName Name cdm_cohort object.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/newCdmCohort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cdm_cohort objects constructor. — newCdmCohort","text":"cdm_cohort object","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/newCdmCohort.tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"cdm_cohort objects constructor. — newCdmCohort.tbl","title":"cdm_cohort objects constructor. — newCdmCohort.tbl","text":"cdm_cohort objects constructor.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/newCdmCohort.tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cdm_cohort objects constructor. — newCdmCohort.tbl","text":"","code":"# S3 method for tbl newCdmCohort(   cohortTable,   cohortSetTable = NULL,   cohortAttritionTable = NULL,   cohortCountTable = NULL,   cohortName = \"cohort\" )"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/newCdmCohort.tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cdm_cohort objects constructor. — newCdmCohort.tbl","text":"cohortTable Table least: cohort_definition_id, subject_id, cohort_start_date, cohort_end_date. cohortSetTable Table least: cohort_definition_id, cohort_name cohortAttritionTable Table least: cohort_definition_id, number_subjects, number_records, reason_id, reason, excluded_subjects, excluded_records. cohortCountTable Table least: cohort_definition_id, number_subjects, number_records. cohortName Name cdm_cohort object.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/newCdmCohort.tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cdm_cohort objects constructor. — newCdmCohort.tbl","text":"cdm_cohort object","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/newCdmReference.html","id":null,"dir":"Reference","previous_headings":"","what":"cdm_reference objects constructor — newCdmReference","title":"cdm_reference objects constructor — newCdmReference","text":"cdm_reference objects constructor","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/newCdmReference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cdm_reference objects constructor — newCdmReference","text":"","code":"newCdmReference(cdmTables, cdmName, cdmVersion)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/newCdmReference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cdm_reference objects constructor — newCdmReference","text":"cdmTables List tables (tbl_sql, tbl data.frame) contains reference OMOP Common data model. cdmName Name cdm. cdmVersion Version cdm (\"5.3\" \"5.4\").","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/newCdmReference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cdm_reference objects constructor — newCdmReference","text":"cdm_reference object.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/print.cdm_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a CDM reference object — print.cdm_reference","title":"Print a CDM reference object — print.cdm_reference","text":"Print CDM reference object","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/print.cdm_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a CDM reference object — print.cdm_reference","text":"","code":"# S3 method for cdm_reference print(x, ...)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/print.cdm_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a CDM reference object — print.cdm_reference","text":"x cdm_reference object ... Included compatibility generic. used.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/print.cdm_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a CDM reference object — print.cdm_reference","text":"Invisibly returns input","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/setTemporary.html","id":null,"dir":"Reference","previous_headings":"","what":"Set temporary (or permanent) behavior for compute functions. — setTemporary","title":"Set temporary (or permanent) behavior for compute functions. — setTemporary","text":"Set temporary (permanent) behavior compute functions.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/setTemporary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set temporary (or permanent) behavior for compute functions. — setTemporary","text":"","code":"setTemporary(intermediateAsTemp = TRUE, cohortAsTemp = FALSE)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/setTemporary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set temporary (or permanent) behavior for compute functions. — setTemporary","text":"intermediateAsTemp Whether intermediate tables temporary. cohortAsTemp Whether cohort tables temporary.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/setTemporary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set temporary (or permanent) behavior for compute functions. — setTemporary","text":"","code":"# \\donttest{ library(CDMUtilities) setTemporary(intermediateAsTemp = TRUE, cohortAsTemp = FALSE) # }"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/sub-sub-.cdm_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a cdm reference object — [[.cdm_reference","title":"Subset a cdm reference object — [[.cdm_reference","text":"Subset cdm reference object","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/sub-sub-.cdm_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a cdm reference object — [[.cdm_reference","text":"","code":"# S3 method for cdm_reference [[(x, i)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/sub-sub-.cdm_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a cdm reference object — [[.cdm_reference","text":"x cdm reference name index table extract cdm object","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/sub-sub-.cdm_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset a cdm reference object — [[.cdm_reference","text":"single cdm table reference","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/toCamelCase.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a character to camelCase — toCamelCase","title":"Convert a character to camelCase — toCamelCase","text":"Convert character camelCase","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/toCamelCase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a character to camelCase — toCamelCase","text":"","code":"toCamelCase(string)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/toCamelCase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a character to camelCase — toCamelCase","text":"string String convert camelCase","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/toCamelCase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a character to camelCase — toCamelCase","text":"","code":"# \\donttest{ library(CDMUtilities) toCamelCase(c(\"foo bar\", \"fooBar\", \"FooBar\", \"foo_bar\", \"FOOBAR\")) #> [1] \"fooBar\" \"fooBar\" \"fooBar\" \"fooBar\" \"foobar\" # }"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/toSnakeCase.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a character to snake_case — toSnakeCase","title":"Convert a character to snake_case — toSnakeCase","text":"Convert character snake_case","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/toSnakeCase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a character to snake_case — toSnakeCase","text":"","code":"toSnakeCase(string)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/toSnakeCase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a character to snake_case — toSnakeCase","text":"string String convert snake_case","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/toSnakeCase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a character to snake_case — toSnakeCase","text":"","code":"# \\donttest{ library(CDMUtilities) toSnakeCase(c(\"foo bar\", \"fooBar\", \"FooBar\", \"foo_bar\", \"FOOBAR\")) #> [1] \"foo_bar\" \"foo_bar\" \"foo_bar\" \"foo_bar\" \"foobar\"  # }"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/validateCdmCohort.cdm_cohort.html","id":null,"dir":"Reference","previous_headings":"","what":"To assess if an object is a valid cdm_cohort. — validateCdmCohort.cdm_cohort","title":"To assess if an object is a valid cdm_cohort. — validateCdmCohort.cdm_cohort","text":"assess object valid cdm_cohort.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/validateCdmCohort.cdm_cohort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To assess if an object is a valid cdm_cohort. — validateCdmCohort.cdm_cohort","text":"","code":"# S3 method for cdm_cohort validateCdmCohort(cohortTable)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/validateCdmCohort.cdm_cohort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To assess if an object is a valid cdm_cohort. — validateCdmCohort.cdm_cohort","text":"cohortTable Table validate","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/validateCdmCohort.html","id":null,"dir":"Reference","previous_headings":"","what":"To assess if an object is a valid cdm_cohort — validateCdmCohort","title":"To assess if an object is a valid cdm_cohort — validateCdmCohort","text":"assess object valid cdm_cohort","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/validateCdmCohort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To assess if an object is a valid cdm_cohort — validateCdmCohort","text":"","code":"validateCdmCohort(cohortTable)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/validateCdmCohort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To assess if an object is a valid cdm_cohort — validateCdmCohort","text":"cohortTable cdm_cohort validate.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/validateCdmReference.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a cdm_reference object. — validateCdmReference","title":"Validate a cdm_reference object. — validateCdmReference","text":"Validate cdm_reference object.","code":""},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/validateCdmReference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a cdm_reference object. — validateCdmReference","text":"","code":"validateCdmReference(cdm)"},{"path":"https://darwin-eu-dev.github.io/CDMUtilities/reference/validateCdmReference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a cdm_reference object. — validateCdmReference","text":"cdm cdm_reference object.","code":""}]
